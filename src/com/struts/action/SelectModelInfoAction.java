/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.springframework.context.ApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;
import com.user.service.ModelInfoManager;
/** 
 * MyEclipse Struts
 * Creation date: 08-17-2013
 * 
 * XDoclet definition:
 * @struts.action path="/userForm" name="userFormForm" input="/User/userForm.jsp" scope="request" validate="true"
 */
public class SelectModelInfoAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	protected static ApplicationContext ctx = null;

	/**
	 * @param name
	 * @return java.lang.Object
	 */
	protected Object getBean(String name) {
		if (ctx == null) {
			ctx = WebApplicationContextUtils
					.getRequiredWebApplicationContext(servlet
							.getServletContext());
		}
		return ctx.getBean(name);
	}
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward selectModelInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String view = request.getParameter("view");
		request.setAttribute("view", view);
		
		return mapping.findForward("success");	
	}
	
	public ActionForward saveMenuId(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String menuId = request.getParameter("menuIdPara");
		
		StringBuffer json_s=new StringBuffer();
		json_s.append("{\"menuId_new\":\""+menuId+"\"}");
		String json_s_new=json_s.toString();
		
		response.getWriter().write(json_s_new);
		return null;	
	}
	
	public ActionForward selectTreeModelInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");	
		ModelInfoManager modelInfoManager = (ModelInfoManager) this
		.getBean("modelInfoManager");
		
		String treeId = request.getParameter("orgid");
		if (treeId==null){
			treeId="0";
		}
		String jsonStr = modelInfoManager.getTreeNodes(treeId);
	
		
		response.getWriter().write(jsonStr);
		return mapping.findForward(null);
	}
	public ActionForward addNode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String nodeId = request.getParameter("nodeId");
		String modelName = request.getParameter("modelName");
		ModelInfoManager modelInfoManager = (ModelInfoManager) this
		.getBean("modelInfoManager");
		String s = modelInfoManager.addNode(nodeId, modelName);
		
		response.getWriter().write(s);
		return null;	
	}
	public ActionForward selectNodeName(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String nodeId = request.getParameter("nodeId");
		ModelInfoManager modelInfoManager = (ModelInfoManager) this
		.getBean("modelInfoManager");
		String s = modelInfoManager.selectNodeName(nodeId);
		
		response.getWriter().write(s);
		return null;	
	}
	public ActionForward updateNode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String nodeId = request.getParameter("nodeId");
		String modelName = request.getParameter("modelName");
		ModelInfoManager modelInfoManager = (ModelInfoManager) this
		.getBean("modelInfoManager");
		String s = modelInfoManager.updateNode(nodeId,modelName);
		
		response.getWriter().write(s);
		return null;	
	}
	public ActionForward deleteNode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		String nodeId = request.getParameter("nodeId");
		String parentId = request.getParameter("parentId");
		ModelInfoManager modelInfoManager = (ModelInfoManager) this
		.getBean("modelInfoManager");
		String s = modelInfoManager.deleteNode(nodeId,parentId);
		
		response.getWriter().write(s);
		return null;	
	}


}